name: Release

on:
  release:
    types: [ published ]
  workflow_dispatch:

permissions:
  contents: write

env:
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  # make sure that WEB_VERSION <= the release version
  WEB_VERSION: v2.1.0

jobs:
  generate:
    name: build and upload binaries
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Download dist
        uses: robinraju/release-downloader@v1.8
        with:
          repository: proxoar/talk-web
          tag: ${{ env.WEB_VERSION }}
          fileName: dist.tar.gz

      - name: Untar dist
        run: |
          mkdir -p temp
          tar -C temp -xzf dist.tar.gz
          mv temp/* web/html
          rm -r temp
          ls web/html

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Build binaries
        run: make release

      - name: Upload the artifacts
        uses: skx/github-action-publish-binaries@release-2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: 'build/*.tar.gz build/*.zip'

  amd64:
    name: amd64
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_NAME }}-amd64
          tags: |
            type=raw,value=latest
            type=ref,event=tag

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile-release
          build-args: WEB_VERSION=${{ env.WEB_VERSION }}
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  multi-platforms:
    name: multi-platforms
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=ref,event=tag

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile-release
          build-args: WEB_VERSION=${{ env.WEB_VERSION }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
